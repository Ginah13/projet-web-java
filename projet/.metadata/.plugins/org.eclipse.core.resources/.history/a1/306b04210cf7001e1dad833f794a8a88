

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.*;

/**
 * Servlet implementation class ServletGauss
 */
public class ServletGauss extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServletGauss() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		PrintWriter display = response.getWriter();
		display.println("!DOCTYPE html>\n"
				+ "<html>\n"
				+ "<head>\n"
				+ "    <meta charset=\"UTF-8\">\n"
				+ "    <title>Valeurs de la matrice</title>\n"
				+ "</head>\n"
				+ "<body>\n"
				+ "    <h1>Les valeurs de la matrice</h1>\n"
				+ "    <form method=\"post\" action=\"ServelGauss\">\n"
				+ "    <%\n"
				+ "        // Récupération de la chaîne de caractères contenant les champs de saisie générés dans doPost\n"
				+ "        String champsMatrice =(String) request.getAttribute(\"champsMatrice\");\n"
				+ "        if (champsMatrice != null) {\n"
				+ "            out.println(\"<p><b>Champs de saisie générés :</b></p>\");\n"
				+ "            out.println(\"<div>\" + champsMatrice + \"</div>\");\n"
				+ "        } else {\n"
				+ "            out.println(\"<p>Aucun champ de saisie généré.</p>\");\n"
				+ "        }\n"
				+ "\n"
				+ "     	/*  // Notez que vous devrez ajuster cette partie pour récupérer et traiter toutes les valeurs nécessaires\n"
				+ "        String valeurExemple = request.getParameter(\"A[0][0]\");\n"
				+ "        if (valeurExemple != null) {\n"
				+ "            out.println(\"<p>Valeur de A[0][0] : \" + valeurExemple + \"</p>\");\n"
				+ "        } else {\n"
				+ "            out.println(\"<p>Aucune valeur pour A[0][0] reçue.</p>\");\n"
				+ "        }*/   \n"
				+ "    %>\n"
				+ "    <button type=\"submit\">ENTREZ</button>\n"
				+ "    	</form>\n"
				+ "    </body>\n"
				+ "</html>");
	    	
//    	// Rediriger vers gnuplot.jsp avec les solutions
//    	String url = "gnuplot.jsp?dimension=" + dimension;
//    	for (int i = 0; i < solution.length; i++) {
//    	  url += "&solution" + i + "=" + solution[i];
//    	}
//    	response.sendRedirect(url);
    	//response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	//  Récupération des valeurs 
			int dimension = Integer.parseInt(request.getParameter("dimension"));
			double[][] data = (double[][]) request.getAttribute("data");
			double[] vecteur = (double[]) request.getAttribute("vecteur");
			
			
			
			// Instanciation
	    	MethodeGauss gauss = new MethodeGauss();
	    	
	    	gauss.triangulaire(data, vecteur);
	    	double[] solution = gauss.resolution(data, vecteur);

	    	for (int i = 0; i < solution.length; i++) {
	    	    System.out.println("x" + (i + 1) + " = " + solution[i]);
	    	}

		doGet(request, response);
	}

}
