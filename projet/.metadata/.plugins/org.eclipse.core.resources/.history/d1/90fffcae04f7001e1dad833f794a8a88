

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

/**
 * Servlet implementation class ServletGauss
 */
public class ServletGauss extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServletGauss() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		PrintWriter display = response.getWriter();
		display.println("<html>"
				+ "<head>"
					+ "<title>Les valeurs de la metrice </title>"
					+ " <meta charset=\"UTF-8\">"
					+ "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
					+ "<link rel=\"stylesheet\" href=\"style.css\">"
				+ "</head>"
				+ "<body>"
					+ "<h1>Les valeurs de la matrice</h1>"
//					+ "<form method='POST' action='Myservlet'>"
//					+ " <label for='dimension'>Dimension : </label><input type='text' name='dimension'>"
					+ "<p><button type='submit'>ENTREZ</button></p>"
				+ "</body>"
			+ "</html>");

	//response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		int dimension = Integer.parseInt(request.getParameter("dimension"));
		
		 // Récupération de la chaîne de caractères contenant les champs de saisie générés dans doPost
        String champsMatrice =(String) request.getAttribute("champsMatrice");
        if (champsMatrice != null) {
           System.out.println("<p><b>Champs de saisie générés :</b></p>");
           System.out.println("<div>" + champsMatrice + "</div>");
        } else {
            System.out.println("<p>Aucun champ de saisie généré.</p>");
        }

		// Récupérer les valeurs de la matrice
    	double[][] matriceA = new double[dimension][dimension];
    	for (int i = 0; i < dimension; i++) {
    	    for (int j = 0; j < dimension; j++) {
    	        String valeur = request.getParameter("A[" + i + "][" + j + "]");
    	        matriceA[i][j] = Double.parseDouble(valeur);
    	    }
    	}
    	
    	// Récupérer les valeurs du vecteur
    	double[] vecteurB = new double[dimension];
    	for (int i = 0; i < dimension; i++) {
    	    String valeur = request.getParameter("b[" + i + "]");
    	    vecteurB[i] = Double.parseDouble(valeur);
    	}

    	// Instanciation
    	MethodeGauss gauss = new MethodeGauss();
    	
    	gauss.triangulaire(matriceA, vecteurB);
    	
    	double[] solution = gauss.resolution(matriceA, vecteurB);

    	for (int i = 0; i < solution.length; i++) {
    	    System.out.println("x" + (i + 1) + " = " + solution[i]);
    	}
    	
    	// Rediriger vers gnuplot.jsp avec les solutions
    	String url = "gnuplot.jsp?dimension=" + dimension;
    	for (int i = 0; i < solution.length; i++) {
    	  url += "&solution" + i + "=" + solution[i];
    	}
    	response.sendRedirect(url);

		doGet(request, response);
	}

}
